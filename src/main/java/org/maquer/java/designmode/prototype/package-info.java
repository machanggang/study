/**
 * <h3>原型设计模式</h3>
 * 
 * <p>
 * 定义：通过复制现有的对象实例来创建新的对象实例。
 * <p>
 * 使用场景：
 * 1. 复制对象的结果和数据。
 * 2. 希望对目标对象的修改不影响既有的原型对象。
 * 3. 创建一个对象的成本比较大。
 * 
 * <p>
 * 优点：
 *   1，使用原型模型创建一个对象比直接new一个对象更有效率，因为它直接操作内存中的二进制流，特别是复制大对象时，性能的差别非常明显。
 *   2，隐藏了制造新实例的复杂性，使得创建对象就像我们在编辑文档时的复制粘贴一样简单。
 * <p>
 * 缺点：
 *   1，由于使用原型模式复制对象时不会调用类的构造方法，所以原型模式无法和单例模式组合使用，因为原型类需要将clone方法的作用域修改为public类型，那么单例模式的条件就无法满足了。
 *   2，使用原型模式时不能有final对象。
 *   3，Object类的clone方法只会拷贝对象中的基本数据类型，对于数组，引用对象等只能另行拷贝。这里涉及到深拷贝和浅拷贝的概念。
 * 
 * <p>
 * 注意：
 * 1. 需要单独对引用类型进行“拷贝”处理。
 */
package org.maquer.java.designmode.prototype;